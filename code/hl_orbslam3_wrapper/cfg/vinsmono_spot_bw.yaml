%YAML:1.0

#common parameters
imu_topic: "/imu"
image_topic: "/spot/camera/frontleft/image"
output_path: "/user/vins_mono_out"

#camera calibration
model_type: PINHOLE
camera_name: camera
image_width: 640
image_height: 480
distortion_parameters:
   k1: 0.0
   k2: 0.0
   p1: 0.0
   p2: 0.0
projection_parameters:
   fx: 257.47900390625
   fy: 256.8888854980469
   cx: 324.6042175292969
   cy: 250.34426879882812

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 0.347473, -0.493356, -0.797410,
          -0.001094,  0.850184, -0.526485,
           0.937689,  0.183812,  0.294876 ]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.083978, 0.029972, 0.166624]

#feature tracker parameters
max_cnt: 250            # max feature number in feature tracking
min_dist: 25            # min distance between two features
freq: 10.0              # frequency (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequency will be same as raw image
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, turn on equalize to find enough features
fisheye: 0              # if using fisheye, turn on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.05   # max solver itration time (ms), to guarantee real time
max_num_iterations: 10  # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters    The more accurate parameters you provide, the better performance
acc_n: 4.0e-2      # accelerometer measurement noise standard deviation.
gyr_n: 1.0e-3      # gyroscope measurement noise standard deviation.
acc_w: 4.0e-2      # accelerometer bias random work noise standard deviation.
gyr_w: 1.0e-3      # gyroscope bias random work noise standard deviation.
g_norm: 9.81       # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/user/vins_mono_out/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet).

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
